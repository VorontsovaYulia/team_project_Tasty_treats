{"mappings":"CASC,SAAUA,EAAGC,EAAQC,EAAUC,GAC9B,aAGA,IAAIC,EAAa,aACbC,EAAO,WAAY,EACnBC,EAAW,CACbC,WAAY,EACZC,cAAc,EACdC,UAAW,WACXC,WAAY,YACZC,WAAY,SACZC,YAAa,OACbC,WAAY,UACZC,aAAa,EACbC,UAAU,EACVC,kBAAkB,EAClBC,SAAS,EACTC,aAAc,CACZC,MAAO,UACPC,IAAK,WAEPC,YAAa,EACbC,YAAa,QACbC,cAAe,EACfC,SAAU,GACVC,SAAUpB,EACVqB,QAASrB,EACTsB,QAAStB,GAIPuB,EAAS,SAAUC,EAASC,GAC9B,IAAIC,EACAC,EAGJC,KAAKJ,QAAUA,EACfI,KAAKC,IAAMlC,EAAE6B,GACbI,KAAKE,SAAWnC,EAAEoC,OAAO,GAAI9B,EAAUwB,GAGvCC,EAAUE,KAAKC,IAAIG,KAAK,WAAaJ,KAAKE,SAASZ,cAInDS,IADUC,KAAKE,SAASG,aAAeC,KAAKC,KAAOD,KAAKE,OACzB,EAAVV,GAAe,GAAGW,QAAQ,GAC/CT,KAAKU,OAAS,CACZC,OAAQZ,GAIVC,KAAKY,KAAON,KAAKO,MAAsB,IAAhBP,KAAKQ,UAGvBjB,EAAQZ,cAAiBe,KAAKE,SAASrB,cAC1CmB,KAAKE,SAASjB,aAAaC,MAAQc,KAAKE,SAASjB,aAAaE,IAC5Da,KAAKE,SAASvB,aAGlBqB,KAAKe,UAAY1C,EACjB2B,KAAKgB,MAAQ7C,EACb6B,KAAKiB,M,EAGHC,EAAU,CACZD,KAAM,WACJjB,KAAKmB,eACLnB,KAAKoB,eACLpB,KAAKqB,Y,EAGPD,aAAc,WACRpB,KAAKE,SAASpB,WAGlBkB,KAAKsB,OAAOC,GAAG,YAAavB,KAAKwB,YAAYC,KAAKzB,OAClDA,KAAKsB,OAAOC,GAAG,WAAYvB,KAAK0B,aAAaD,KAAKzB,OAClDA,KAAKsB,OAAOC,GAAG,QAASvB,KAAK2B,aAAaF,KAAKzB,O,EAIjDwB,YAAa,SAAUI,GACrB,IAAIC,EAAQ7B,KAAK8B,SAASF,GAC1B5B,KAAK+B,WAAWF,EAAO,WACvB7B,KAAKE,SAAST,QAAQoC,EAAQ,EAAG7B,KAAKU,OAAOC,OAAQX,KAAKC,I,EAI5D0B,aAAc,SAAUC,GACtB,IACIjB,EADQX,KAAK8B,SAASF,GACL,EAErB5B,KAAKgC,YAAYrB,EAAQX,KAAKC,KAC9BD,KAAKiC,gBAAgBtB,EAAQX,KAAKC,KAE9BD,KAAKE,SAASnB,kBAChBiB,KAAKsB,OAAOY,K,EAIhBF,YAAa,SAAUrB,GACrB,IAAIkB,EAAQlB,EAAS,EAErBX,KAAK+B,WAAWF,EAAO,SACvB7B,KAAKU,OAAOC,OAASkB,EAAQ,EAC7B7B,KAAKU,OAAOyB,OAAQ,C,EAGtBT,aAAc,SAAUE,GACtB,IAAIC,EAAQ7B,KAAK8B,SAASF,GACtBjB,EAASX,KAAKU,OAAOC,SAAU,EAE/ByB,EAAYpC,KAAKU,OAAOyB,MAAQ,QAAU,SAC9CnC,KAAK+B,WAAWpB,EAAS,EAAGyB,GAC5BpC,KAAKE,SAASR,QAAQmC,EAAQ,EAAG7B,KAAKU,OAAOC,OAAQX,KAAKC,I,EAG5D6B,SAAU,SAAUF,GAClB,IAAIS,EAAUtE,EAAE6D,EAAEU,eACdC,EAAQF,EAAQE,QAChBC,EAAOzE,EAAE6D,EAAEa,QAAQC,KAAK,aACxBC,EAAY3C,KAAKE,SAASyC,UAG9BH,EAAQA,GAAOxC,KAAK4C,iBAAiBhB,EAAGS,EAASE,GACjDC,EAAOxC,KAAKE,SAAS3B,aAAe,QAAUiE,EAG9C,IAAIX,EAAQQ,EAAQR,SAAoB,SAATW,EAAkB,GAAM,GAUvD,OAPAX,EAAQA,EAAQ,IAAOD,EAAEiB,QAAUN,EAAQ,GAAI,EAAKV,EAGpDA,EACEc,GAAaA,GAAa3C,KAAKE,SAAS5B,YAAcuD,EAAQc,EAC1DA,EAAY,EACZd,C,EAIRe,iBAAkB,SAAUhB,EAAGS,EAASE,GAEtC,OADYX,EAAEkB,MAAQT,EAAQU,SAASC,MACvBT,EAAQ,IAAMvC,KAAKE,SAAS3B,aACxC,OACA,O,EAGN8C,WAAY,WACVrB,KAAK+B,WAAW/B,KAAKU,OAAOC,OAAS,EAAG,S,EAG1CoB,WAAY,SAAUkB,EAAUC,GAC9B,IAAIC,EACAC,EACAC,EACAC,EACAC,EAAIvD,KAAKE,SAEbnC,EAAEyF,KACAxD,KAAKsB,OACL,SAAUO,EAAO4B,GACfN,EAAepF,EAAE0F,GAAMC,KAAK,sBAC5BN,EAAgBrF,EAAE0F,GAAMC,KAAK,uBAC7BL,EAAYC,EAAazB,GAASoB,EAAWC,EAAa,QAG1DG,EAAYxB,EAAQoB,GAAa,GAAMC,EAAaG,EAEpDF,EAAaT,KAAK,QAAS,OAASW,EAAY,IAAMrD,KAAKY,MAC3DwC,EAAcV,KAAK,QAAS,OAASY,EAAa,IAAMtD,KAAKY,MAG7D,IAEIhC,EAFA+E,EAAmBV,GAAY,EAAI3C,KAAKC,KAAK0C,GAAY,EAQ3DrE,EAJA2E,EAAEK,aACFL,EAAEK,YAAYC,QACdN,EAAEK,YAAYD,GAEDJ,EAAEK,YAAYD,GAEd3D,KAAKe,UAAUnC,WAIX,UAAfsE,GAA0BD,GAAW,KAEnCpB,GAASvB,KAAKC,KAAK0C,IAAcpB,EAAQ,GAAKoB,EAAW,IAC3DE,EAAaT,KAAK,QAAS,QAAU9D,GAEnCiD,GAASoB,GACXG,EAAcV,KAAK,QAAS,QAAU9D,GAG3C,EAAC6C,KAAKzB,M,EAIXmB,aAAc,WAgEZ,IA/DA,IAAIoC,EAAIvD,KAAKE,SACTlB,EAAUuE,EAAEvE,QAAU8E,SAASC,KAAKC,MAAM,KAAK,GAAK,GAGpDP,EACF,qCACAF,EAAEhE,SACF,eACAgE,EAAEhE,SACF,uHACAS,KAAKiE,iBAAiBV,EAAE/E,WACxB,iBACA+E,EAAEnE,YACF,+DACAY,KAAKY,KACL,aACA5B,EACA,IACAgB,KAAKY,KACL,4BACAZ,KAAKY,KACL,aACA5B,EACA,IACAgB,KAAKY,KACL,2BACAZ,KAAKY,KACL,aACA5B,EACA,IACAgB,KAAKY,KACL,0BACAZ,KAAKY,KACL,SACA2C,EAAE3E,WACF,aACAoB,KAAKkE,kBACHlE,KAAKY,KAAO,YACZ2C,EAAE9E,WACF8E,EAAE9E,WACF8E,EAAE/E,WAEJwB,KAAKkE,kBACHlE,KAAKY,KAAO,YACZ2C,EAAE7E,WACF6E,EAAE7E,WACF6E,EAAE/E,WAEJwB,KAAKkE,kBACHlE,KAAKY,KAAO,YACZ2C,EAAEtE,aAAaC,MACfqE,EAAEtE,aAAaE,IACfoE,EAAE/E,WAEJwB,KAAKmE,cAAcnE,KAAKY,KAAM,CAC5BpC,UAAW+E,EAAE/E,UACbY,YAAamE,EAAEnE,YACfC,YAAakE,EAAElE,cAEjB,eAGE+E,EAAc,GACTC,EAAI,EAAGA,EAAId,EAAEjF,WAAY+F,IAChCD,GAAeX,EAEjBzD,KAAKC,IAAIqE,OAAOF,GAChBpE,KAAKsB,OAAStB,KAAKC,IAAIyD,KAAK,W,EAG9BS,cAAe,SAAUI,EAAIC,GAC3B,MAA2B,YAApBA,EAAMhG,UACTwB,KAAKyE,qBAAqBF,EAAIC,GAC9BxE,KAAK0E,mBAAmBH,EAAIC,E,EAGlCE,mBAAoB,SAAUH,EAAIC,GAChC,MACE,gDACAD,EACA,kKACAC,EAAMnF,YAHN,mDAMAkF,EANA,yMASAA,EACA,uG,EAIJE,qBAAsB,SAAUF,EAAIC,GAClC,IAAIG,EACF,+aAEF,MACE,6CACAJ,EACA,QACAI,EACA,oBACAH,EAAMnF,YACN,qEACAkF,EACA,QACAI,EACA,0EACAJ,EACA,uSACAC,EAAMnF,YACN,0B,EAIJ4E,iBAAkB,SAAUzF,GAC1B,MAAqB,YAAdA,EACH,yGACA,oH,EAGN0F,kBAAmB,SAAUK,EAAIK,EAAYC,EAAUrG,GAErD,MACE,uBACA+F,EACA,gEAJyB,YAAd/F,EAA0B,IAAM,KAM3C,yCACAoG,EACA,0CACAC,EACA,uB,EAIJ5C,gBAAiB,SAAUtB,EAAQV,IAEjCT,EADeQ,KAAKE,SAASV,UACpBmB,EAAQV,E,GAIjB6E,EAAgB,CAClBC,OAAQ,WACN,IAAI/D,EAAQ,oBACRf,EAAMlC,EAAEiC,MACGC,EAAIG,KAAKY,GAAOM,OACtBY,MACTjC,EAAI+E,WAAWhE,GAAOiE,Q,EAGxBC,UAAW,SAAUvE,EAAQH,GAC3B,IAEI2E,EADMpH,EAAEiC,MACMI,KAFN,qBAGRO,EAASwE,EAAQjF,SAAS5B,YAAcqC,EAAS,IAGjDH,IACFG,EAASL,KAAKE,MAAMG,IAEtBwE,EAAQnD,YAAYrB,G,EAGtByE,UAAW,WAIT,OAFUrH,EAAEiC,MACOI,KAFP,qBAGIM,OAAOC,M,EAGzB0E,OAAQ,SAAUC,GAChB,IAGIhE,EAFMvD,EAAEiC,MACOI,KAFP,qBAGUkB,OAElBgE,GAAW,GAAKA,EAAU,IAC5BC,QAAQC,MAAM,4BAIhBlE,EAASmE,MAAMC,UAAUC,MAAMC,KAAKtE,IAC7BuE,SAAQ,SAAUpC,GACvB1F,EAAE0F,GAAMqC,IAAI,CACVvD,MAAO+C,EAAU,KACjBS,OAAQT,EAAU,M,KAKxBU,YAAa,SAAUC,GACrB,IAEId,EADMpH,EAAEiC,MACMI,KAFN,sBAGC,IAAT6F,EACFd,EAAQ7D,OAAOY,IAAI,6BAEnBiD,EAAQjF,SAASpB,UAAW,EAC5BqG,EAAQ/D,e,GAMdrD,EAAEoC,OAAOR,EAAO+F,UAAWxE,GAE3BnD,EAAEmI,GAAa,WAAI,SAAUrG,GAE3B,IAAK9B,EAAEoI,cAActG,GAAU,CAC7B,GAAIiF,EAAcsB,eAAevG,GAC/B,OAAOiF,EAAcjF,GAASwG,MAC5BrG,KACAyF,MAAMC,UAAUC,MAAMC,KAAKU,UAAW,IAGxCvI,EAAEyH,MACA,UAAY3F,EAAU,sBAAtB,gB,CAKN,OAAOG,KAAKwD,MAAK,WAEVzF,EAAEqC,KAAKJ,KAAM,sBAChBjC,EAAEqC,KAAKJ,KAAM,oBAAwB,IAAIL,EAAOK,KAAMH,G,IAI7D,CA/aA,CA+aE0G,OAAQvI,OAAQC","sources":["src/jquery.star-rating-svg.js"],"sourcesContent":["/*\n *  jQuery StarRatingSvg v1.2.0\n *\n *  http://github.com/nashio/star-rating-svg\n *  Author: Ignacio Chavez\n *  hello@ignaciochavez.com\n *  Licensed under MIT\n */\n\n(function ($, window, document, undefined) {\n  'use strict';\n\n  // Create the defaults once\n  var pluginName = 'starRating';\n  var noop = function () {};\n  var defaults = {\n    totalStars: 5,\n    useFullStars: false,\n    starShape: 'straight',\n    emptyColor: 'lightgray',\n    hoverColor: 'orange',\n    activeColor: 'gold',\n    ratedColor: 'crimson',\n    useGradient: true,\n    readOnly: false,\n    disableAfterRate: true,\n    baseUrl: false,\n    starGradient: {\n      start: '#FEF7CD',\n      end: '#FF9511',\n    },\n    strokeWidth: 4,\n    strokeColor: 'black',\n    initialRating: 0,\n    starSize: 40,\n    callback: noop,\n    onHover: noop,\n    onLeave: noop,\n  };\n\n  // The actual plugin constructor\n  var Plugin = function (element, options) {\n    var _rating;\n    var newRating;\n    var roundFn;\n\n    this.element = element;\n    this.$el = $(element);\n    this.settings = $.extend({}, defaults, options);\n\n    // grab rating if defined on the element\n    _rating = this.$el.data('rating') || this.settings.initialRating;\n\n    // round to the nearest half\n    roundFn = this.settings.forceRoundUp ? Math.ceil : Math.round;\n    newRating = (roundFn(_rating * 2) / 2).toFixed(1);\n    this._state = {\n      rating: newRating,\n    };\n\n    // create unique id for stars\n    this._uid = Math.floor(Math.random() * 999);\n\n    // override gradient if not used\n    if (!options.starGradient && !this.settings.useGradient) {\n      this.settings.starGradient.start = this.settings.starGradient.end =\n        this.settings.activeColor;\n    }\n\n    this._defaults = defaults;\n    this._name = pluginName;\n    this.init();\n  };\n\n  var methods = {\n    init: function () {\n      this.renderMarkup();\n      this.addListeners();\n      this.initRating();\n    },\n\n    addListeners: function () {\n      if (this.settings.readOnly) {\n        return;\n      }\n      this.$stars.on('mouseover', this.hoverRating.bind(this));\n      this.$stars.on('mouseout', this.restoreState.bind(this));\n      this.$stars.on('click', this.handleRating.bind(this));\n    },\n\n    // apply styles to hovered stars\n    hoverRating: function (e) {\n      var index = this.getIndex(e);\n      this.paintStars(index, 'hovered');\n      this.settings.onHover(index + 1, this._state.rating, this.$el);\n    },\n\n    // clicked on a rate, apply style and state\n    handleRating: function (e) {\n      var index = this.getIndex(e);\n      var rating = index + 1;\n\n      this.applyRating(rating, this.$el);\n      this.executeCallback(rating, this.$el);\n\n      if (this.settings.disableAfterRate) {\n        this.$stars.off();\n      }\n    },\n\n    applyRating: function (rating) {\n      var index = rating - 1;\n      // paint selected and remove hovered color\n      this.paintStars(index, 'rated');\n      this._state.rating = index + 1;\n      this._state.rated = true;\n    },\n\n    restoreState: function (e) {\n      var index = this.getIndex(e);\n      var rating = this._state.rating || -1;\n      // determine star color depending on manually rated\n      var colorType = this._state.rated ? 'rated' : 'active';\n      this.paintStars(rating - 1, colorType);\n      this.settings.onLeave(index + 1, this._state.rating, this.$el);\n    },\n\n    getIndex: function (e) {\n      var $target = $(e.currentTarget);\n      var width = $target.width();\n      var side = $(e.target).attr('data-side');\n      var minRating = this.settings.minRating;\n\n      // hovered outside the star, calculate by pixel instead\n      side = !side ? this.getOffsetByPixel(e, $target, width) : side;\n      side = this.settings.useFullStars ? 'right' : side;\n\n      // get index for half or whole star\n      var index = $target.index() - (side === 'left' ? 0.5 : 0);\n\n      // pointer is way to the left, rating should be none\n      index = index < 0.5 && e.offsetX < width / 4 ? -1 : index;\n\n      // force minimum rating\n      index =\n        minRating && minRating <= this.settings.totalStars && index < minRating\n          ? minRating - 1\n          : index;\n      return index;\n    },\n\n    getOffsetByPixel: function (e, $target, width) {\n      var leftX = e.pageX - $target.offset().left;\n      return leftX <= width / 2 && !this.settings.useFullStars\n        ? 'left'\n        : 'right';\n    },\n\n    initRating: function () {\n      this.paintStars(this._state.rating - 1, 'active');\n    },\n\n    paintStars: function (endIndex, stateClass) {\n      var $polygonLeft;\n      var $polygonRight;\n      var leftClass;\n      var rightClass;\n      var s = this.settings;\n\n      $.each(\n        this.$stars,\n        function (index, star) {\n          $polygonLeft = $(star).find('[data-side=\"left\"]');\n          $polygonRight = $(star).find('[data-side=\"right\"]');\n          leftClass = rightClass = index <= endIndex ? stateClass : 'empty';\n\n          // has another half rating, add half star\n          leftClass = index - endIndex === 0.5 ? stateClass : leftClass;\n\n          $polygonLeft.attr('class', 'svg-' + leftClass + '-' + this._uid);\n          $polygonRight.attr('class', 'svg-' + rightClass + '-' + this._uid);\n\n          // get color for level\n          var ratedColorsIndex = endIndex >= 0 ? Math.ceil(endIndex) : 0;\n\n          var ratedColor;\n          if (\n            s.ratedColors &&\n            s.ratedColors.length &&\n            s.ratedColors[ratedColorsIndex]\n          ) {\n            ratedColor = s.ratedColors[ratedColorsIndex];\n          } else {\n            ratedColor = this._defaults.ratedColor;\n          }\n\n          // only override colors in rated stars and when rated number is valid\n          if (stateClass === 'rated' && endIndex > -1) {\n            // limit to painting only to rated stars, and specific case for half star\n            if (index <= Math.ceil(endIndex) || (index < 1 && endIndex < 0)) {\n              $polygonLeft.attr('style', 'fill:' + ratedColor);\n            }\n            if (index <= endIndex) {\n              $polygonRight.attr('style', 'fill:' + ratedColor);\n            }\n          }\n        }.bind(this)\n      );\n    },\n\n    renderMarkup: function () {\n      var s = this.settings;\n      var baseUrl = s.baseUrl ? location.href.split('#')[0] : '';\n\n      // inject an svg manually to have control over attributes\n      var star =\n        '<div class=\"jq-star\" style=\"width:' +\n        s.starSize +\n        'px;  height:' +\n        s.starSize +\n        'px;\"><svg version=\"1.0\" class=\"jq-star-svg\" shape-rendering=\"geometricPrecision\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n        this.getSvgDimensions(s.starShape) +\n        ' stroke-width:' +\n        s.strokeWidth +\n        'px;\" xml:space=\"preserve\"><style type=\"text/css\">.svg-empty-' +\n        this._uid +\n        '{fill:url(' +\n        baseUrl +\n        '#' +\n        this._uid +\n        '_SVGID_1_);}.svg-hovered-' +\n        this._uid +\n        '{fill:url(' +\n        baseUrl +\n        '#' +\n        this._uid +\n        '_SVGID_2_);}.svg-active-' +\n        this._uid +\n        '{fill:url(' +\n        baseUrl +\n        '#' +\n        this._uid +\n        '_SVGID_3_);}.svg-rated-' +\n        this._uid +\n        '{fill:' +\n        s.ratedColor +\n        ';}</style>' +\n        this.getLinearGradient(\n          this._uid + '_SVGID_1_',\n          s.emptyColor,\n          s.emptyColor,\n          s.starShape\n        ) +\n        this.getLinearGradient(\n          this._uid + '_SVGID_2_',\n          s.hoverColor,\n          s.hoverColor,\n          s.starShape\n        ) +\n        this.getLinearGradient(\n          this._uid + '_SVGID_3_',\n          s.starGradient.start,\n          s.starGradient.end,\n          s.starShape\n        ) +\n        this.getVectorPath(this._uid, {\n          starShape: s.starShape,\n          strokeWidth: s.strokeWidth,\n          strokeColor: s.strokeColor,\n        }) +\n        '</svg></div>';\n\n      // inject svg markup\n      var starsMarkup = '';\n      for (var i = 0; i < s.totalStars; i++) {\n        starsMarkup += star;\n      }\n      this.$el.append(starsMarkup);\n      this.$stars = this.$el.find('.jq-star');\n    },\n\n    getVectorPath: function (id, attrs) {\n      return attrs.starShape === 'rounded'\n        ? this.getRoundedVectorPath(id, attrs)\n        : this.getSpikeVectorPath(id, attrs);\n    },\n\n    getSpikeVectorPath: function (id, attrs) {\n      return (\n        '<polygon data-side=\"center\" class=\"svg-empty-' +\n        id +\n        '\" points=\"281.1,129.8 364,55.7 255.5,46.8 214,-59 172.5,46.8 64,55.4 146.8,129.7 121.1,241 212.9,181.1 213.9,181 306.5,241 \" style=\"fill: transparent; stroke: ' +\n        attrs.strokeColor +\n        ';\" />' +\n        '<polygon data-side=\"left\" class=\"svg-empty-' +\n        id +\n        '\" points=\"281.1,129.8 364,55.7 255.5,46.8 214,-59 172.5,46.8 64,55.4 146.8,129.7 121.1,241 213.9,181.1 213.9,181 306.5,241 \" style=\"stroke-opacity: 0;\" />' +\n        '<polygon data-side=\"right\" class=\"svg-empty-' +\n        id +\n        '\" points=\"364,55.7 255.5,46.8 214,-59 213.9,181 306.5,241 281.1,129.8 \" style=\"stroke-opacity: 0;\" />'\n      );\n    },\n\n    getRoundedVectorPath: function (id, attrs) {\n      var fullPoints =\n        'M520.9,336.5c-3.8-11.8-14.2-20.5-26.5-22.2l-140.9-20.5l-63-127.7 c-5.5-11.2-16.8-18.2-29.3-18.2c-12.5,0-23.8,7-29.3,18.2l-63,127.7L28,314.2C15.7,316,5.4,324.7,1.6,336.5S1,361.3,9.9,370 l102,99.4l-24,140.3c-2.1,12.3,2.9,24.6,13,32c5.7,4.2,12.4,6.2,19.2,6.2c5.2,0,10.5-1.2,15.2-3.8l126-66.3l126,66.2 c4.8,2.6,10,3.8,15.2,3.8c6.8,0,13.5-2.1,19.2-6.2c10.1-7.3,15.1-19.7,13-32l-24-140.3l102-99.4 C521.6,361.3,524.8,348.3,520.9,336.5z';\n\n      return (\n        '<path data-side=\"center\" class=\"svg-empty-' +\n        id +\n        '\" d=\"' +\n        fullPoints +\n        '\" style=\"stroke: ' +\n        attrs.strokeColor +\n        '; fill: transparent; \" /><path data-side=\"right\" class=\"svg-empty-' +\n        id +\n        '\" d=\"' +\n        fullPoints +\n        '\" style=\"stroke-opacity: 0;\" /><path data-side=\"left\" class=\"svg-empty-' +\n        id +\n        '\" d=\"M121,648c-7.3,0-14.1-2.2-19.8-6.4c-10.4-7.6-15.6-20.3-13.4-33l24-139.9l-101.6-99 c-9.1-8.9-12.4-22.4-8.6-34.5c3.9-12.1,14.6-21.1,27.2-23l140.4-20.4L232,164.6c5.7-11.6,17.3-18.8,30.2-16.8c0.6,0,1,0.4,1,1 v430.1c0,0.4-0.2,0.7-0.5,0.9l-126,66.3C132,646.6,126.6,648,121,648z\" style=\"stroke: ' +\n        attrs.strokeColor +\n        '; stroke-opacity: 0;\" />'\n      );\n    },\n\n    getSvgDimensions: function (starShape) {\n      return starShape === 'rounded'\n        ? 'width=\"550px\" height=\"500.2px\" viewBox=\"0 146.8 550 500.2\" style=\"enable-background:new 0 0 550 500.2;'\n        : 'x=\"0px\" y=\"0px\" width=\"305px\" height=\"305px\" viewBox=\"60 -62 309 309\" style=\"enable-background:new 64 -59 305 305;';\n    },\n\n    getLinearGradient: function (id, startColor, endColor, starShape) {\n      var height = starShape === 'rounded' ? 500 : 250;\n      return (\n        '<linearGradient id=\"' +\n        id +\n        '\" gradientUnits=\"userSpaceOnUse\" x1=\"0\" y1=\"-50\" x2=\"0\" y2=\"' +\n        height +\n        '\"><stop  offset=\"0\" style=\"stop-color:' +\n        startColor +\n        '\"/><stop  offset=\"1\" style=\"stop-color:' +\n        endColor +\n        '\"/> </linearGradient>'\n      );\n    },\n\n    executeCallback: function (rating, $el) {\n      var callback = this.settings.callback;\n      callback(rating, $el);\n    },\n  };\n\n  var publicMethods = {\n    unload: function () {\n      var _name = 'plugin_' + pluginName;\n      var $el = $(this);\n      var $starSet = $el.data(_name).$stars;\n      $starSet.off();\n      $el.removeData(_name).remove();\n    },\n\n    setRating: function (rating, round) {\n      var _name = 'plugin_' + pluginName;\n      var $el = $(this);\n      var $plugin = $el.data(_name);\n      if (rating > $plugin.settings.totalStars || rating < 0) {\n        return;\n      }\n      if (round) {\n        rating = Math.round(rating);\n      }\n      $plugin.applyRating(rating);\n    },\n\n    getRating: function () {\n      var _name = 'plugin_' + pluginName;\n      var $el = $(this);\n      var $starSet = $el.data(_name);\n      return $starSet._state.rating;\n    },\n\n    resize: function (newSize) {\n      var _name = 'plugin_' + pluginName;\n      var $el = $(this);\n      var $starSet = $el.data(_name);\n      var $stars = $starSet.$stars;\n\n      if (newSize <= 1 || newSize > 200) {\n        console.error('star size out of bounds');\n        return;\n      }\n\n      $stars = Array.prototype.slice.call($stars);\n      $stars.forEach(function (star) {\n        $(star).css({\n          width: newSize + 'px',\n          height: newSize + 'px',\n        });\n      });\n    },\n\n    setReadOnly: function (flag) {\n      var _name = 'plugin_' + pluginName;\n      var $el = $(this);\n      var $plugin = $el.data(_name);\n      if (flag === true) {\n        $plugin.$stars.off('mouseover mouseout click');\n      } else {\n        $plugin.settings.readOnly = false;\n        $plugin.addListeners();\n      }\n    },\n  };\n\n  // Avoid Plugin.prototype conflicts\n  $.extend(Plugin.prototype, methods);\n\n  $.fn[pluginName] = function (options) {\n    // if options is a public method\n    if (!$.isPlainObject(options)) {\n      if (publicMethods.hasOwnProperty(options)) {\n        return publicMethods[options].apply(\n          this,\n          Array.prototype.slice.call(arguments, 1)\n        );\n      } else {\n        $.error(\n          'Method ' + options + ' does not exist on ' + pluginName + '.js'\n        );\n      }\n    }\n\n    return this.each(function () {\n      // preventing against multiple instantiations\n      if (!$.data(this, 'plugin_' + pluginName)) {\n        $.data(this, 'plugin_' + pluginName, new Plugin(this, options));\n      }\n    });\n  };\n})(jQuery, window, document);\n"],"names":["$","window","document","undefined","pluginName","noop","defaults","totalStars","useFullStars","starShape","emptyColor","hoverColor","activeColor","ratedColor","useGradient","readOnly","disableAfterRate","baseUrl","starGradient","start","end","strokeWidth","strokeColor","initialRating","starSize","callback","onHover","onLeave","Plugin","element","options","_rating","newRating","this","$el","settings","extend","data","forceRoundUp","Math","ceil","round","toFixed","_state","rating","_uid","floor","random","_defaults","_name","init","methods","renderMarkup","addListeners","initRating","$stars","on","hoverRating","bind","restoreState","handleRating","e","index","getIndex","paintStars","applyRating","executeCallback","off","rated","colorType","$target","currentTarget","width","side","target","attr","minRating","getOffsetByPixel","offsetX","pageX","offset","left","endIndex","stateClass","$polygonLeft","$polygonRight","leftClass","rightClass","s","each","star","find","ratedColorsIndex","ratedColors","length","location","href","split","getSvgDimensions","getLinearGradient","getVectorPath","starsMarkup","i","append","id","attrs","getRoundedVectorPath","getSpikeVectorPath","fullPoints","startColor","endColor","publicMethods","unload","removeData","remove","setRating","$plugin","getRating","resize","newSize","console","error","Array","prototype","slice","call","forEach","css","height","setReadOnly","flag","fn","isPlainObject","hasOwnProperty","apply","arguments","jQuery"],"version":3,"file":"index.67a4b06b.js.map"}